Software Testing:
-to Avoid failure
-we need to identify fault ,means process of discovering the causes of failure
-process of ensuring that the failure does not happen again is called fault correction or fault removal
-to test our programming we will use Unit Testing framework.

What is JUnit?
- JUnit is standard unit testing framework is known as JUnit.
- It is an open source framework
- programmer can create test cases and test his/her own code
- to perform unit testing we need to create test cases
- unit test is a code which ensure that the program logic works as expected
- current version is JUnit 4

Feature of JUnit:
- IT is a framework which is used for writing and running test cases
-provides annotations to identify test method
-provides assertion for testing expected reason
-provides test Runners for running tests
-it allows you to write code faster which increases quality
-it is elegantly simple,less complex and takes less time
-JUnit test can run automatically and they check their own results and provides immediate feedback
-JUnit test can be categorized into test suites containing test cases and even other test suites
-It shows test progress in a bar that is green if test is running smoothly,it turns red when a test fails

What is Unit Test Case:
-a unit test case is a part of code which ensures that another part of code(method) works as expected
-to achieve a desired result quickly,a test framework is required and JUnit is perfect test framework for java
-a formal written a unit test case is characterized by a known input and expected output
-there must be atleast 2 unit test cases,one +ve test case nd one -ve test case.

download JUnit 4 

Date:25/08/2022
Assert Class:
-All Assertion methods are present in assert class
-Assert class provides a set of assertion methods,useful for writing test case

Methods:
1.void assertEquals(boolean expected,boolean actual)
2.void assertTrue(boolean condition)
3.void assertFalse(boolean condition)
4.void assertNoNull(Object obj):check that an object is not null
5.void assertNull(Object obj):check that an object is null
6.void assertSame(obj1,obj2):tests if two object references point to the same object
7.void ssertNotSame(obj1,obj2):test if two object references do not point to the same object
8.void asertArrayEquals(expected array,actual array)


practice que:
1.Write +ve and -ve test case to check  a method checkAge() age>=18,true
2.write +ve and -ve test case to check  login(),usernme="admin",password="admin123"

Annotation:
-describes functionality in which you can add your code and apply that in a method or a class
-JUnit annotations provides the following information about the test methods:
	1.which methods are going to run before and after test methods
	2.which methods run before and after all the methods
	3.which methods or classes will be ignored during the execution
	
	
1.@Test: it tells JUnit that public void method to which it is attached can be run as a test case
2.@Before: 	annoatating the method with @Before causes that method to be run before the test method
3.@After: annoatating the method with @After causes that method to be run after the test method
4.@BeforeClass: annoatating the method with @BeforeClass causes it to be run once before any o the Test method in the class
5.@AfterClass: This will perform the method after all tests have finish.this can be used for cleanup activity.
6.@Ingnor:It is used to ignore the test and that test will not be executed
Note:@beforeClass and @afterClass methods should be static





